document.addEventListener('DOMContentLoaded', function() {

    // --- SEARCH FORM LOGIC ---
    const searchForm = document.getElementById('search-form');
    const searchInput = document.getElementById('search-input');
    const searchResult = document.getElementById('search-result');

    if (searchForm) {
        searchForm.addEventListener('submit', function(event) {
            event.preventDefault();
            const query = searchInput.value.toLowerCase().trim();
            let response = '';

            if (query === '') {
                response = 'ü§î Vui l√≤ng nh·∫≠p c√¢u h·ªèi c·ªßa b·∫°n v√†o √¥ t√¨m ki·∫øm.';
            } else if (query.includes('h·ªçc ph√≠')) {
                response = 'Ch√†o b·∫°n, h·∫°n ch√≥t ƒë√≥ng h·ªçc ph√≠ cho H·ªçc k·ª≥ n√†y l√† <strong>17:00 ng√†y 28/02/2026</strong>.';
            } else if (query.includes('l·ªãch thi')) {
                response = 'L·ªãch thi cu·ªëi k·ª≥ d·ª± ki·∫øn c√¥ng b·ªë v√†o <strong>tu·∫ßn th·ª© 10</strong> c·ªßa h·ªçc k·ª≥.';
            } else if (query.includes('k√Ω t√∫c x√°') || query.includes('ktx')) {
                response = 'ƒêƒÉng k√Ω K√Ω t√∫c x√° b·∫Øt ƒë·∫ßu t·ª´ ng√†y <strong>01/08/2026</strong>.';
            } else {
                response = 'C·∫£m ∆°n c√¢u h·ªèi c·ªßa b·∫°n! H√£y th·ª≠ h·ªèi v·ªÅ "h·ªçc ph√≠", "l·ªãch thi" ho·∫∑c "k√Ω t√∫c x√°".';
            }

            searchResult.innerHTML = response;
            searchResult.style.display = 'block';
        });
    }

    // --- SMOOTH SCROLL ---
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function(e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) target.scrollIntoView({ behavior: 'smooth' });
        });
    });

    // --- LOGIN & REGISTER MODAL ---
    const authModal = document.getElementById('auth-modal');
    const loginTab = document.getElementById('tab-login');
    const registerTab = document.getElementById('tab-register');
    const loginFormEl = document.getElementById('login-form');
    const registerFormEl = document.getElementById('register-form');
    const closeModalBtn = document.querySelector('.auth-modal__close');

    if (authModal) { // Th√™m ki·ªÉm tra
        document.querySelectorAll('.header__nav-link').forEach(link => {
            link.addEventListener('click', e => {
                const target = e.target.textContent.trim();
                if(target === "ƒêƒÉng nh·∫≠p") {
                    e.preventDefault();
                    authModal.style.display = "block";
                    loginFormEl.style.display = "block";
                    registerFormEl.style.display = "none";
                    loginTab.classList.add('active');
                    registerTab.classList.remove('active');
                } else if(target === "ƒêƒÉng k√Ω") {
                    e.preventDefault();
                    authModal.style.display = "block";
                    loginFormEl.style.display = "none";
                    registerFormEl.style.display = "block";
                    loginTab.classList.remove('active');
                    registerTab.classList.add('active');
                }
            });
        });

        closeModalBtn.addEventListener('click', () => { authModal.style.display = "none"; });
        document.querySelector('.auth-modal__overlay').addEventListener('click', () => { authModal.style.display = "none"; });

        loginTab.addEventListener('click', () => {
            loginFormEl.style.display = "block";
            registerFormEl.style.display = "none";
            loginTab.classList.add('active');
            registerTab.classList.remove('active');
        });
        registerTab.addEventListener('click', () => {
            loginFormEl.style.display = "none";
            registerFormEl.style.display = "block";
            loginTab.classList.remove('active');
            registerTab.classList.add('active');
        });
    }

    // --- LOGIN (ƒê√É S·ª¨A D√ôNG fetch V·ªöI NODE.JS) ---
    if (loginFormEl) {
        loginFormEl.addEventListener('submit', function(event) {
            event.preventDefault();
            const usernameInput = document.getElementById('username').value.trim();
            const passwordInput = document.getElementById('password').value.trim();

            fetch('/api/login', { // <-- S·ª¨A L·ªñI 1: ƒê·ªïi 'login.php' th√†nh '/api/login'
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    username: usernameInput,
                    password: passwordInput
                })
            })
            .then(async response => { // D√πng async ƒë·ªÉ l·∫•y .json()
                const data = await response.json();
                if (response.ok) { // Status 200-299
                    // ƒêƒÉng nh·∫≠p th√†nh c√¥ng, chuy·ªÉn h∆∞·ªõng
                    window.location.href = "dashboard.html";
                } else {
                    // L·ªói t·ª´ server (400, 401, 404, 500)
                    showCustomAlert("‚ùå " + data.error, 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showCustomAlert('L·ªói k·∫øt n·ªëi m√°y ch·ªß.', 'error');
            });

            // Kh√¥ng reset form ngay ƒë·ªÉ user c√≥ th·ªÉ s·ª≠a
            // loginFormEl.reset(); 
        });
    }

    // --- REGISTER (ƒê√É S·ª¨A D√ôNG fetch V·ªöI NODE.JS) ---
    if (registerFormEl) {
        registerFormEl.addEventListener('submit', function(event) {
            event.preventDefault();
            const newName = document.getElementById('reg-name').value.trim(); // <-- S·ª¨A L·ªñI 2: L·∫•y th√™m 'name'
            const newUsername = document.getElementById('reg-username').value.trim();
            const newEmail = document.getElementById('reg-email').value.trim();
            const newPassword = document.getElementById('reg-password').value.trim();

            fetch('/api/register', { // <-- S·ª¨A L·ªñI 1: ƒê·ªïi 'register.php' th√†nh '/api/register'
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    name: newName, // <-- S·ª¨A L·ªñI 2: G·ª≠i th√™m 'name'
                    username: newUsername,
                    email: newEmail,
                    password: newPassword
                })
            })
            .then(async response => {
                const data = await response.json();
                if (response.ok) { // Status 201
                    showCustomAlert("üéâ ƒêƒÉng k√Ω th√†nh c√¥ng! Vui l√≤ng ƒëƒÉng nh·∫≠p.", 'success');
                    registerFormEl.reset();
                    loginTab.click(); // Chuy·ªÉn sang tab ƒëƒÉng nh·∫≠p
                } else {
                    // L·ªói t·ª´ server (400, 409, 500)
                    showCustomAlert("‚ùå " + data.error, 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showCustomAlert('L·ªói k·∫øt n·ªëi m√°y ch·ªß.', 'error');
            });
        });
    }

    // --- H√ÄM TH√îNG B√ÅO T√ôY CH·ªàNH (Thay th·∫ø alert) ---
    function showCustomAlert(message, type = 'info') {
        let alertBox = document.getElementById('custom-alert');
        if (!alertBox) {
            alertBox = document.createElement('div');
            alertBox.id = 'custom-alert';
            document.body.appendChild(alertBox);
        }
        
        alertBox.textContent = message;
        alertBox.style.display = 'block';
        alertBox.style.position = 'fixed';
        alertBox.style.top = '20px';
        alertBox.style.left = '50%';
        alertBox.style.transform = 'translateX(-50%)';
        alertBox.style.padding = '15px 25px';
        alertBox.style.borderRadius = '8px';
        alertBox.style.zIndex = '1001';
        alertBox.style.color = 'white';
        alertBox.style.backgroundColor = (type === 'error') ? '#d9534f' : '#5cb85c';
        alertBox.style.boxShadow = '0 4px 10px rgba(0,0,0,0.1)';

        setTimeout(() => {
            alertBox.style.display = 'none';
        }, 3000);
    }
});